[
    {
        "question": "Comment savoir si un projet est sous Maven ?",
        "answer": "Il contient un fichier de configuration pom.xml",
        "imgURI": "maven.png",
        "choices": [
            "Il contient un dossier serveur",
            "Il contient un fichier de configuration web.xml",
            "Il contient un fichier de configuration pom.xml",
            "Nous pouvons nous connecter à un serveur local avec un navigateur"
        ]
    },
    {
        "question": "Qu'est-ce qu'Eclipse Link ?",
        "answer": "Un JPA",
        "imgURI": "eclipse_link.png",
        "choices": [
            "Un JPA",
            "Un gestionnaire de projet",
            "Un serveur local",
            "Un éditeur de code (IDE)"
        ]
    },
    {
        "question": "À quoi sert un JPA ?",
        "answer": "Faire une liaison entre nos entités et nos tables dans la base de données",
        "imgURI": "java.png",
        "choices": []
    },
    {
        "question": "Qu'est-ce que PostgreSQL ?",
        "answer": "Un gestionnaire de base de données",
        "imgURI": "postgresql.jpg",
        "choices": [
            "Un JPA",
            "Un serveur local",
            "Un gestionnaire de base de données",
            "Un framework"
        ]
    },
    {
        "question": "Qu'est-ce que Tomcat ?",
        "answer": "Un serveur local",
        "imgURI": "tomcat.jpg",
        "choices": [
            "Un gestionnaire de projet",
            "Un serveur local",
            "Un gestionnaire de base de données",
            "Un framework"
        ]
    },
    {
        "question": "Qu'est-ce que le design pattern \"Factory\"?",
        "answer": "Permet d'instancier différentes classes depuis une seule et même classe (en singleton)",
        "imgURI": "codes/factory.png",
        "choices": []
    },
    {
        "question": "Qu'est-ce que le design pattern \"Singleton\"?",
        "answer": "Permet d'avoir qu'une seule instance pour une classe qui ne peut avoir plusieurs instances (comme les classes DAO)",
        "imgURI": "codes/singleton.png",
        "choices": []
    },
    {
        "question": "Qu'est-ce que Maven ?",
        "answer": "Un outil de gestion de dépendances",
        "imgURI": "maven.png",
        "choices": []
    },
    {
        "question": "Qu'est-ce que le fichier pom.xml ?",
        "answer": "Un fichier de configuration pour Maven",
        "imgURI": "maven.png",
        "choices": []
    },
    {
        "question": "À quoi sert le fichier pom.xml ?",
        "answer": "Configurer notre projet et y ajouter des dépendances",
        "imgURI": "maven.png",
        "choices": []
    },
    {
        "question": "Qu'est-ce qu'un entity manager ?",
        "answer": "Un objet permettant de gérer nos entités et nos requêtes vers la BDD",
        "imgURI": "eclipse_link.png",
        "choices": []
    },
    {
        "question": "Quelles sont les trois techniques utilisées ici ?",
        "answer": "Héritage, Abstraction, Polymorphisme",
        "imgURI": "codes/heritage.png",
        "choices": [
            "Encapsulation",
            "Héritage",
            "Abstraction",
            "Polymorphisme"
        ]
    },
    {
        "question": "Comment est appelée cette technique ?",
        "answer": "Encapsulation",
        "imgURI": "codes/encapsulation.png",
        "choices": []
    },
    {
        "question": "À quoi sert cette annotation ?",
        "answer": "Lier notre attribut à notre colonne dans la table ",
        "imgURI": "codes/annotation_column.png",
        "choices": []
    },
    {
        "question": "À quoi sert cette annotation ?",
        "answer": "Déclarer la classe comme entité pour la lier à une table dans la BDD",
        "imgURI": "codes/annotation_entity.png",
        "choices": []
    },
    {
        "question": "À quoi sert cette annotation ?",
        "answer": "Déclarer que notre attribut est une clé primaire",
        "imgURI": "codes/annotation_id.png",
        "choices": []
    },
    {
        "question": "À quoi sert cette annotation ?",
        "answer": "Créer une requête SQL nommée pour la lier à une méthode dans notre classe DAO",
        "imgURI": "codes/annotation_namedquery.png",
        "choices": []
    },
    {
        "question": "À quoi servent les transactions ?",
        "answer": "Faire un retour en arrière si une erreur se produit sur l'une de nos requêtes (pour préserver la cohérence de la BDD)",
        "imgURI": "postgresql.png",
        "choices": []
    },
    {
        "question": "Que fait cette ligne ?",
        "answer": "Récupère la requête 'Episode.findAll' et l'exécute",
        "imgURI": "java.png",
        "choices": []
    },
    {
        "question": "Que fait la méthode persist de l'interface entity manager ?",
        "answer": "Elle ajoute une entité à la BDD",
        "imgURI": "persist.png",
        "choices": [
            "Elle met à jour une entité dans la BDD",
            "Elle ajoute une entité à la BDD",
            "Elle supprime une entité de la BDD"
        ]
    },
    {
        "question": "Que fait la méthode merge de l'interface entity manager ?",
        "answer": "Elle met à jour une entité dans la BDD",
        "imgURI": "merge.png",
        "choices": [
            "Elle met à jour une entité dans la BDD",
            "Elle ajoute une entité à la BDD",
            "Elle supprime une entité de la BDD"
        ]
    },
    {
        "question": "Que fait la méthode remove de l'interface entity manager ?",
        "answer": "Elle supprime une entité de la BDD",
        "imgURI": "remove.png",
        "choices": [
            "Elle met à jour une entité dans la BDD",
            "Elle ajoute une entité à la BDD",
            "Elle supprime une entité de la BDD"
        ]
    }
]